% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/items-funs.R
\name{items_functions}
\alias{items_functions}
\alias{items_length}
\alias{items_length.STACItem}
\alias{items_length.STACItemCollection}
\alias{items_matched}
\alias{items_matched.STACItem}
\alias{items_matched.STACItemCollection}
\alias{items_fetch}
\alias{items_fetch.STACItem}
\alias{items_fetch.STACItemCollection}
\alias{items_next}
\alias{items_next.STACItem}
\alias{items_next.STACItemCollection}
\alias{items_datetime}
\alias{items_datetime.STACItem}
\alias{items_datetime.STACItemCollection}
\alias{items_bbox}
\alias{items_bbox.STACItem}
\alias{items_bbox.STACItemCollection}
\alias{items_assets}
\alias{items_assets.STACItem}
\alias{items_assets.STACItemCollection}
\title{STACItemCollection functions}
\usage{
items_length(items)

\method{items_length}{STACItem}(items)

\method{items_length}{STACItemCollection}(items)

items_matched(items, ...)

\method{items_matched}{STACItem}(items, ...)

\method{items_matched}{STACItemCollection}(items, ..., matched_field = NULL)

items_fetch(items, ...)

\method{items_fetch}{STACItem}(items, ...)

\method{items_fetch}{STACItemCollection}(items, ..., progress = TRUE, matched_field = NULL)

items_next(items, ...)

\method{items_next}{STACItem}(items, ...)

\method{items_next}{STACItemCollection}(items, ...)

items_datetime(items)

\method{items_datetime}{STACItem}(items)

\method{items_datetime}{STACItemCollection}(items)

items_bbox(items)

\method{items_bbox}{STACItem}(items)

\method{items_bbox}{STACItemCollection}(items)

items_assets(items, ...)

\method{items_assets}{STACItem}(items, ...)

\method{items_assets}{STACItemCollection}(items, ..., simplify = FALSE)
}
\arguments{
\item{items}{a \code{STACItemCollection} object.}

\item{...}{additional arguments. See details.}

\item{matched_field}{a \code{character} vector with the path
where the number of items returned in the named list is located starting from
the initial node of the list. For example, if the information is at position
\code{items$meta$found} of the object, it must be passed as the following
parameter \code{c("meta", "found")}.}

\item{progress}{a \code{logical} indicating if a progress bar must be
shown or not. Defaults to \code{TRUE}.}

\item{simplify}{a \code{logical} should return only the assets name of the
first item? if not a \code{list} with all assets name will be returned. Default
is \code{FALSE}.}
}
\value{
The \code{items_assets()} if simplify is \code{TRUE}, returns a \code{character} value with
all assets names of the first item. Otherwise, returns a \code{list} with assets
name for each item.
The \code{items_length()} returns an \code{integer} value.
The \code{items_matched()} returns an \code{integer} value.
If STAC web server does not support this extension, returns \code{NULL}.
The \code{items_fetch()} returns an \code{STACItemCollection} with all
matched items.
The \code{items_datetime()} returns a \code{list} of all items' datetime.
The \code{items_bbox()} returns a \code{list} with all items'
bounding boxes.
}
\description{
The \code{items_length()} function shows how many items there are in
the \code{STACItemCollection} object.

The \code{items_matched()} function shows how many items matched the
search criteria. It supports \code{search:metadata} (v0.8.0),
\code{context} (v0.9.0), and \code{numberMatched} (OGC WFS3 core spec).

The \code{items_fetch()} function request all STAC Items through
pagination.

The \code{items_datetime()} function retrieves a the \code{datetime}
field in \code{properties} from \code{STACItemCollection} and
\code{STACItem} objects.

The \code{items_bbox()} function retrieves a the \code{bbox}
field of a \code{STACItemCollection} or an \code{STACItem} object.

The \code{item_assets()} function returns the assets name from
\code{STACItemCollection} and \code{STACItem} objects.
}
\details{
For \code{items_fetch} ellipsis is used to pass additional \code{httr} options to
\link[httr:GET]{GET} or \link[httr:POST]{POST} methods, such as
\link[httr:add_headers]{add_headers} or \link[httr:set_cookies]{set_cookies}.

For \code{items_filter} function is used to pass logical expressions.
}
\examples{
\dontrun{

x <- stac("https://brazildatacube.dpi.inpe.br/stac") \%>\%
  stac_search(collections = "CB4_64_16D_STK-1") \%>\%
  stac_search(limit = 500) \%>\%
  get_request()

x \%>\% items_length()
x \%>\% items_matched()
x \%>\% items_datetime()
x \%>\% items_bbox()
x \%>\% items_fetch()
}

}
